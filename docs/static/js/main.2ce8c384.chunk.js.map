{"version":3,"sources":["components/CategoryAdd.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/Loading.jsx","components/GifGrid.jsx","Hooks/useFetchGif.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","className","value","onChange","target","getGif","category","a","URL","encodeURI","fetch","res","json","data","gifInfo","map","img","id","title","url","images","downsized_medium","GifGridItem","src","alt","Loading","GifGrid","loading","state","setState","useEffect","then","useFetchGif","nanoid","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAmCeA,EAhCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACNC,mBAAS,IADH,mBACnCC,EADmC,KACvBC,EADuB,KAc1C,OACC,mCACC,sBAAMC,SAVa,SAACC,GACrBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC9BR,GAAc,SAACS,GAAD,MAAS,CAACP,MACxBC,EAAc,MAMd,SACC,uBACCO,KAAK,OACLC,UAAU,cACVC,MAAOV,EACPW,SAlBsB,SAACR,GAC1BF,EAAcE,EAAES,OAAOF,e,8BCLZG,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,4DACJ,mCACVC,EAFc,iDAEkCC,UAAUH,GAF5C,6BACJ,oCADI,SAGFI,MAAMF,GAHJ,cAGdG,EAHc,gBAIGA,EAAIC,OAJP,uBAIZC,EAJY,EAIZA,KAEFC,EAAUD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EAC5B,MAAM,CACJC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVC,IAAG,UAAEH,EAAII,cAAN,aAAE,EAAYC,qBAVD,kBAabP,GAba,4CAAH,sDCUJQ,EAXK,SAAC,GAAiB,IAAhBJ,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAC1B,OACE,sBAAKlB,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,qBAAKsB,IAAKJ,EAAIA,IAAKK,IAAKN,EAAOjB,UAAU,gBAE3C,mBAAGA,UAAU,cAAb,SAA4BiB,QCCnBO,EAPC,WACd,OACE,qBAAKxB,UAAU,YCwBJyB,EAtBC,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECHL,SAACA,GAAY,IAAD,EACXf,mBAAS,CACjCsB,KAAK,GACLc,SAAQ,IAH2B,mBAC9BC,EAD8B,KACvBC,EADuB,KAerC,OAVAC,qBAAU,WACRzB,EAAOC,GACNyB,MAAK,SAAAf,GACJa,EAAS,CACPhB,KAAKG,EACLW,SAAQ,SAIZ,CAACrB,IACIsB,EDXuBI,CAAY1B,GAA9Bc,EADkB,EACvBP,KAAYc,EADW,EACXA,QACnB,OACE,qCACE,6BAAKrB,IAEHqB,GAAW,cAAC,EAAD,IAEb,oBAAI1B,UAAU,YAAd,SAEImB,EAAOL,KAAI,SAAAC,GAAG,OACZ,cAAC,EAAD,eAEIA,GADCiB,wBEUFC,EArBM,WAAO,IAAD,EACW3C,mBAAS,CAAC,KADrB,mBAClB4C,EADkB,KACN7C,EADM,KAEzB,OAAK6C,EAIH,qCACE,iDACA,cAAC,EAAD,CAAa7C,cAAeA,IAC5B,uBACA,mCAEI6C,EAAWpB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAASA,SAAUA,GAAe2B,uBAVnC,M,MCFXG,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.2ce8c384.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CategoryAdd = ({ setCategories }) => {\r\n\tconst [inputValue, setInputValue] = useState('');\r\n\r\n\tconst handleInputChange = (e) => {\r\n\t\tsetInputValue(e.target.value);\r\n\t};\r\n\tconst hanldeSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tif (inputValue.trim().length > 2) {\r\n\t\t\tsetCategories((cat) => [inputValue]);\r\n\t\t\tsetInputValue('');\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form onSubmit={hanldeSubmit}>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='text'\r\n\t\t\t\t\tclassName='input__text'\r\n\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t/>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nCategoryAdd.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoryAdd;\r\n","\r\n\r\nexport const getGif = async  (category)=>{\r\n  const API_KEY = 'nA3po3gSKPi9NoXIXqWqqz9OGeiSwfhO';\r\n  const URL = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${API_KEY}`;\r\n  const res = await fetch(URL);\r\n  const { data } = await res.json();\r\n\r\n  const gifInfo = data.map(img=>{\r\n    return{\r\n      id:img.id,\r\n      title:img.title,\r\n      url: img.images?.downsized_medium,\r\n    }\r\n  });\r\n  return gifInfo;\r\n}\r\n","import React from 'react';\r\nconst GifGridItem = ({title,url}) => {\r\n  return (\r\n    <div className='card'>\r\n      <div className=\"card__header\">\r\n        <img src={url.url} alt={title} className='card__img'/>\r\n      </div>\r\n      <p className='card__title'>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nconst Loading = () => {\r\n  return (\r\n    <div className='spiner'>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react'\r\nimport { useFetchGif } from '../Hooks/useFetchGif';\r\nimport GifGridItem from './GifGridItem';\r\nimport Loading from './Loading';\r\nimport {nanoid} from 'nanoid'\r\nconst GifGrid = ({category}) => {    \r\n  const {data:images,loading} = useFetchGif(category);\r\n  return (\r\n    <>\r\n      <h2>{category}</h2>\r\n      {\r\n        loading && <Loading/>\r\n      }\r\n      <ol className='Container'>\r\n        {\r\n          images.map(img=>(\r\n            <GifGridItem \r\n            key={nanoid()} \r\n            {...img}\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\"\r\nimport {getGif} from '../helpers/getGifs'\r\nexport const useFetchGif = (category)=>{\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading:true\r\n  });\r\n  useEffect(()=>{\r\n    getGif(category)\r\n    .then(img=>{\r\n      setState({\r\n        data:img,\r\n        loading:false\r\n      });\r\n    });\r\n\r\n  },[category])\r\n  return state;\r\n}","import React, { useState } from 'react'\r\nimport {nanoid} from 'nanoid'\r\nimport CategoryAdd from './components/CategoryAdd';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['']);\r\n  if (!categories){\r\n    return null\r\n  }\r\n  return (\r\n    <>\r\n      <h1>Gif Expert App </h1>\r\n      <CategoryAdd setCategories={setCategories}/>\r\n      <hr/> \r\n      <>\r\n        { \r\n          categories.map(category=>(\r\n            <GifGrid category={category} key={nanoid()}/>\r\n          ))\r\n        }\r\n      </>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <GifExpertApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}